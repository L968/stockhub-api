// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Stockhub.Modules.Stocks.Infrastructure.Database;

#nullable disable

namespace Stockhub.Modules.Stocks.Infrastructure.Database.Migrations
{
    [DbContext(typeof(StocksDbContext))]
    partial class StocksDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("stocks")
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Stockhub.Modules.Stocks.Domain.Stock", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<DateTime>("CreatedAtUtc")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<string>("Sector")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("sector");

                    b.Property<string>("Symbol")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("symbol");

                    b.Property<DateTime>("UpdatedAtUtc")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("updated_at");

                    b.HasKey("Id");

                    b.ToTable("stock", "stocks");
                });

            modelBuilder.Entity("Stockhub.Modules.Stocks.Domain.StockSnapshot", b =>
                {
                    b.Property<Guid>("StockId")
                        .HasColumnType("uuid")
                        .HasColumnName("stock_id");

                    b.Property<decimal>("ChangePercent")
                        .HasPrecision(5, 2)
                        .HasColumnType("numeric(5,2)")
                        .HasColumnName("change_percent");

                    b.Property<DateTime>("CreatedAtUtc")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at");

                    b.Property<decimal>("LastPrice")
                        .HasPrecision(18, 2)
                        .HasColumnType("numeric(18,2)")
                        .HasColumnName("last_price");

                    b.Property<decimal>("MaxPrice")
                        .HasPrecision(18, 2)
                        .HasColumnType("numeric(18,2)")
                        .HasColumnName("max_price");

                    b.Property<decimal>("MinPrice")
                        .HasPrecision(18, 2)
                        .HasColumnType("numeric(18,2)")
                        .HasColumnName("min_price");

                    b.Property<Guid>("StockId1")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("UpdatedAtUtc")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("updated_at");

                    b.Property<long>("Volume")
                        .HasColumnType("bigint")
                        .HasColumnName("volume");

                    b.HasKey("StockId");

                    b.HasIndex("StockId1");

                    b.ToTable("stock_snapshot", "stocks");
                });

            modelBuilder.Entity("Stockhub.Modules.Stocks.Domain.StockSnapshot", b =>
                {
                    b.HasOne("Stockhub.Modules.Stocks.Domain.Stock", null)
                        .WithOne("Snapshot")
                        .HasForeignKey("Stockhub.Modules.Stocks.Domain.StockSnapshot", "StockId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Stockhub.Modules.Stocks.Domain.Stock", "Stock")
                        .WithMany()
                        .HasForeignKey("StockId1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Stock");
                });

            modelBuilder.Entity("Stockhub.Modules.Stocks.Domain.Stock", b =>
                {
                    b.Navigation("Snapshot")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
